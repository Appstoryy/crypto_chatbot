#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π RU Crypto Bot Pro
"""

import sys
import importlib
from typing import List, Tuple

def check_import(module_name: str, package_name: str = None) -> Tuple[bool, str]:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è"""
    try:
        importlib.import_module(module_name)
        return True, f"‚úÖ {package_name or module_name}"
    except ImportError as e:
        return False, f"‚ùå {package_name or module_name}: {str(e)}"
    except Exception as e:
        return False, f"‚ö†Ô∏è {package_name or module_name}: {str(e)}"

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π RU Crypto Bot Pro...")
    print("=" * 50)
    
    # –°–ø–∏—Å–æ–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    dependencies = [
        ("gradio", "Gradio"),
        ("torch", "PyTorch"),
        ("numpy", "NumPy"),
        ("pandas", "Pandas"),
        ("matplotlib", "Matplotlib"),
        ("sklearn", "Scikit-learn"),
        ("ccxt", "CCXT"),
        ("transformers", "Transformers"),
        ("datasets", "Datasets"),
        ("tiktoken", "TikToken"),
        ("sentencepiece", "SentencePiece"),
        ("torch.nn", "PyTorch Neural Networks"),
    ]
    
    results = []
    failed_count = 0
    
    for module, name in dependencies:
        success, message = check_import(module, name)
        results.append((success, message))
        if not success:
            failed_count += 1
        print(message)
    
    print("=" * 50)
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    try:
        import torch
        print(f"üîß PyTorch –≤–µ—Ä—Å–∏—è: {torch.__version__}")
        print(f"üöÄ CUDA –¥–æ—Å—Ç—É–ø–Ω–∞: {torch.cuda.is_available()}")
        if torch.cuda.is_available():
            print(f"üéØ CUDA –≤–µ—Ä—Å–∏—è: {torch.version.cuda}")
            print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ GPU: {torch.cuda.device_count()}")
    except:
        pass
    
    try:
        import transformers
        print(f"ü§ñ Transformers –≤–µ—Ä—Å–∏—è: {transformers.__version__}")
    except:
        pass
    
    try:
        import tiktoken
        print(f"üî§ TikToken –≤–µ—Ä—Å–∏—è: {tiktoken.__version__}")
    except:
        pass
    
    try:
        import sys
        print(f"üêç Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    except:
        pass
    
    print("=" * 50)
    
    if failed_count == 0:
        print("üéâ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å: python crypto_chatbot.py")
        return 0
    else:
        print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: {failed_count}")
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞–∫–µ—Ç—ã:")
        print("   pip install -r requirements.txt")
        print("\nüîß –î–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å tiktoken:")
        print("   pip install tiktoken sentencepiece")
        return 1

if __name__ == "__main__":
    sys.exit(main())
